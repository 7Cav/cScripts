name: Deploy
on:
  release:
      types: [ published, prereleased ]
jobs:
  build:
    name: Create And Upload Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:koffeinflummi/armake -y
          sudo apt update -y
          sudo apt install armake -y

      - name: Build release
        run: ./tools/deploy.sh ${{ steps.get_version.outputs.VERSION }}

      - name: Upload Release cScripts
        uses: JasonEtco/upload-to-release@master
        with:
          args: release/cScripts-${{ steps.get_version.outputs.VERSION }}.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release cScripts (PUBLIC)
        uses: JasonEtco/upload-to-release@master
        with:
          args: release/cScripts_PUBLIC-${{ steps.get_version.outputs.VERSION }}.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release cScripts (PATCH)
        continue-on-error: true
        uses: JasonEtco/upload-to-release@master
        with:
          args: release/cScripts_PATCH_v* application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release cScripts (Compositions)
        uses: JasonEtco/upload-to-release@master
        with:
          args: release/Compositions-${{ steps.get_version.outputs.VERSION }}.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release CBA Settings Server Config
        continue-on-error: true
        uses: JasonEtco/upload-to-release@master
        with:
          args: release/Server_Config-${{ steps.get_version.outputs.VERSION }}.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}